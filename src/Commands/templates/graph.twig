<?php

namespace {{ namespace|raw }};

use Veloxia\Data\Graph\Graph;
use Veloxia\Data\Contracts\GraphContract;

class {{ name }} extends Graph implements GraphContract
{
    /**
     * Graph accessor when making requests to the API.
     *
     * @var string
     */
    protected static $graphName = '{{graph|raw}}';

    /**
     * Find a specific {{ name|lower }}.
     *
     * @param string $slug
     *
     * @return \{{ namespace|raw }}\{{ name }}
     */
    public static function find(string $slug): self
    {
        return parent::find($slug);
    }

{% for method in methods %}

    /**
{% for annotation in method.annotations %}
     * {{ annotation|raw }}
{% endfor %}
     */
    public function {{method.name}}()
    {
{% for row in method.logic %}
        {{ row|raw }}
{% endfor %}
    }
{% endfor %}

    /**
     * Attribute map used internally by the package in order to do map the accessor methods to the VD graph. Do not make any changes!
     *
     * @var array
     */
    protected static $graphAttributeMap = [
{% for row in classMap %}
        {{ row|raw }}
{% endfor %}
    ];
}
